{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh12240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 README\
\
These are examples of code I wrote for nonlinear systems.
\f1 \

\f0 \

\fs32 Q6Main.m\

\fs24 This code will show an example of a closed loop controller for a nonlinear system.\
There are two parts to it. One will avoid an obstacle the other will just go to a point.\
\
To run my code please follow these instructions:\
1. Open 'Q6Main.m'\
2. Delete the "%\{" from whichever section you want to run (ie Obstacle Avoidence)\
3. Run and look at the plots that appear\
\
The obstacle avoidance takes about a minute to run on my machine but your machine is probably better than mine.\
\

\fs32 Question4.m\

\fs24 This code will show an example of trajectory generation for a differentially flat nonlinear system\
\
To run:\
1. Make sure car_flat_car.m is in your directory\
2. Run and look at the graphs that appear\
\
\

\fs32 car_chained_test.m\

\fs24 This code shows and example of a chained form trajectory generation\
\
Just run the code and a graph should appear showing the generated trajectory.}